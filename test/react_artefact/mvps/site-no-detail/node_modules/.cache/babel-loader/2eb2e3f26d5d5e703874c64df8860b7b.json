{"ast":null,"code":"import _regeneratorRuntime from \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/src/NewAccountForm/new-account-form.js\";\nimport React from 'react';\nimport ApiAccountCreateAbsService from '../services/api-account-create-abs.service';\n\nvar NewAccountForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewAccountForm, _React$Component);\n\n  function NewAccountForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewAccountForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewAccountForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    _this.existingCustomer = {\n      customerId: _this.props.idOfTheAccountOwner\n    };\n    _this.submit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiAccountCreateAbsService.call({\n                customerId: _this.idOfTheAccountOwnerInput.value,\n                rekening: _this.theAccountInput.value,\n                balance: _this.balanceInput.value\n              });\n\n            case 2:\n              data = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(NewAccountForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        id: \"new-account-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"New Account Form\"), React.createElement(\"div\", {\n        id: \"div-vis-customer-id\",\n        className: \"view-component-part visualization-attribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"label-vis-customer-id\",\n        className: \"label-visualization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Customer Id\"), React.createElement(\"p\", {\n        id: \"vs-customer-id\",\n        className: \"class-attribute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.existingCustomer['customerId'])), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"input-id-of-the-account-owner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Id Of The Account Owner\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"input-id-of-the-account-owner\",\n        name: \"idOfTheAccountOwnerInput\",\n        type: \"number\",\n        placeholder: \"Fill the Id Of The Account Owner\",\n        ref: function ref(e) {\n          _this2.idOfTheAccountOwnerInput = e;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"input-the-account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"The Account\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"input-the-account\",\n        name: \"theAccountInput\",\n        type: \"text\",\n        placeholder: \"Fill the The Account\",\n        ref: function ref(e) {\n          _this2.theAccountInput = e;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"input-balance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Balance\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"input-balance\",\n        name: \"balanceInput\",\n        type: \"number\",\n        placeholder: \"Fill the Balance\",\n        ref: function ref(e) {\n          _this2.balanceInput = e;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.submit,\n        id: \"button-submit\",\n        name: \"submit\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return NewAccountForm;\n}(React.Component);\n\nexport default NewAccountForm;","map":{"version":3,"sources":["/Users/affandhia/Documents/Affan/skripsi/ifml-angular-pwa/test/example_1_react/result/abs-bankaccount/src/NewAccountForm/new-account-form.js"],"names":["React","ApiAccountCreateAbsService","NewAccountForm","state","existingCustomer","customerId","props","idOfTheAccountOwner","submit","call","idOfTheAccountOwnerInput","value","rekening","theAccountInput","balance","balanceInput","data","e","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ApiAccountCreateAbsService from '../services/api-account-create-abs.service';\n\nclass NewAccountForm extends React.Component {\n  state = {};\n  existingCustomer = {\n    customerId: this.props.idOfTheAccountOwner,\n  };\n  submit = async () => {\n    const data = await ApiAccountCreateAbsService.call({\n      customerId: this.idOfTheAccountOwnerInput.value,\n      rekening: this.theAccountInput.value,\n      balance: this.balanceInput.value,\n    });\n  };\n\n  render() {\n    return (\n      <form id=\"new-account-form\">\n        <fieldset>\n          <legend>New Account Form</legend>\n          <div\n            id=\"div-vis-customer-id\"\n            className=\"view-component-part visualization-attribute\"\n          >\n            <p id=\"label-vis-customer-id\" className=\"label-visualization\">\n              Customer Id\n            </p>\n            <p id=\"vs-customer-id\" className=\"class-attribute\">\n              {this.existingCustomer['customerId']}\n            </p>\n          </div>\n          <div>\n            <label htmlFor=\"input-id-of-the-account-owner\">\n              Id Of The Account Owner\n            </label>\n            <div>\n              <input\n                id=\"input-id-of-the-account-owner\"\n                name=\"idOfTheAccountOwnerInput\"\n                type=\"number\"\n                placeholder=\"Fill the Id Of The Account Owner\"\n                ref={e => {\n                  this.idOfTheAccountOwnerInput = e;\n                }}\n              />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"input-the-account\">The Account</label>\n            <div>\n              <input\n                id=\"input-the-account\"\n                name=\"theAccountInput\"\n                type=\"text\"\n                placeholder=\"Fill the The Account\"\n                ref={e => {\n                  this.theAccountInput = e;\n                }}\n              />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"input-balance\">Balance</label>\n            <div>\n              <input\n                id=\"input-balance\"\n                name=\"balanceInput\"\n                type=\"number\"\n                placeholder=\"Fill the Balance\"\n                ref={e => {\n                  this.balanceInput = e;\n                }}\n              />\n            </div>\n          </div>\n          <button\n            onClick={this.submit}\n            id=\"button-submit\"\n            name=\"submit\"\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default NewAccountForm;\n"]},"metadata":{},"sourceType":"module"}